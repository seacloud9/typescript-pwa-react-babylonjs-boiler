<!DOCTYPE html>
<html lang="en" dir="ltr">
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title><%= htmlWebpackPlugin.options.title %></title>
        <style>
            body{padding:0; margin:0; background-color:<%= htmlWebpackPlugin.options.bgColor %>;}
            canvas{width:100%; height:100%; display: flex; flex:1; position: absolute; top:0; bottom:0; right:0;left:0}
      </style>
    </head>
    <body>
        <div id="root"></div>

        <!-- Dependencies -->
        <% if (webpackConfig.mode == 'production') { %>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.8.6/umd/react.production.min.js" integrity="sha256-3vo65ZXn5pfsCfGM5H55X+SmwJHBlyNHPwRmWAPgJnM=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.6/umd/react-dom.production.min.js" integrity="sha256-qVsF1ftL3vUq8RFOLwPnKimXOLo72xguDliIxeffHRc=" crossorigin="anonymous"></script>
        <% } else { %>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.8.6/umd/react.development.js" integrity="sha256-9H05eCUa5x4G28dytYBwoAXkR3XgPE3sCogyXhrINwo=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.6/umd/react-dom.development.js" integrity="sha256-I/ClrYyzlYEQkMUjqr7G3m/83znlycDCeI2xuBZsQx0=" crossorigin="anonymous"></script>
        <% } %>
        <script>
            if (location.protocol != 'https:' && window.location.hostname !== 'localhost')
            {
              location.href = 'https:' + window.location.href.substring(window.location.protocol.length);
            }
            if (location.protocol != 'https:' && window.location.hostname !== 'localhost')
            {
              location.href = 'https:' + window.location.href.substring(window.location.protocol.length);
            }
            const shouldRegister = window.location.protocol === 'https:' || window.location.hostname === 'localhost';
            if ('serviceWorker' in navigator && shouldRegister) {
              window.addEventListener('load', () => {
                navigator.serviceWorker.register('./service-worker.js').then(registration => {
                  console.log('SW registered: ', registration);
                }).catch(registrationError => {
                  console.log('SW registration failed: ', registrationError);
                });
              });
            }
            </script>      
    </body>
</html>
